@page "/NewTransaction"
@inject IAccountService AccountService
@inject NavigationManager Navigation

<h3>New Transaction</h3>

<div class="card p-4">
    <div class="form-group mb-3">
        <label for="amount">Deposit Amount:</label>
        <input id="amount" class="form-control" @bind="amount" type="number" step="0.01"/>
    </div>
    
    <div class="form-group mb-3">
        <label for="description">Description:</label>
        <input id="description" class="form-control" @bind="description" placeholder="Enter transaction description"/>
    </div>
    
    <button class="btn btn-success" @onclick="">
        Make Transaction
    </button>
    
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">@errorMessage</div>
    }
    
</div>

@code{
    public Guid AccountId { get; set; }
    
    private decimal amount;
    private string description = string.Empty;
    private string errorMessage = string.Empty;
/*
    private async Task MakeDeposit()
    {
        try
        {
            //var account = await AccountService.GetAccountById(AccountId);
            //if (account == null)
            {
                errorMessage = "Account not found";
                return;
            }
            
            
        }
        
    }
    */
}